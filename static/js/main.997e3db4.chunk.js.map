{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","addContact","useState","name","setName","number","setNumber","handleInput","event","currentTarget","value","className","style","onSubmit","preventDefault","label","input","onChange","type","pattern","title","required","button","Filter","filter","filterContacts","ContactList","contacts","deleteContact","list","map","id","listItem","listItemName","listItemNumber","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","parsedContacts","normalizedFilter","toLowerCase","visibleContacts","contact","includes","contactFormState","newContact","uuidv4","undefined","find","prevState","alert","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,iBCAhJD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,aAAe,kCAAkC,eAAiB,oCAAoC,OAAS,8B,mBCA3MD,EAAOC,QAAU,CAAC,MAAQ,qB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,wKCqEzCC,MAjEf,YAAsC,IAAfC,EAAc,EAAdA,WACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAeN,OACE,uBAAMC,UAAWC,IAAMZ,YAAaa,SAPjB,SAACL,GACpBA,EAAMM,iBACNb,EAAW,CAAEE,OAAME,WANnBD,EAAQ,IACRE,EAAU,KAUV,UACE,uBAAOK,UAAWC,IAAMG,MAAxB,kBACA,uBACEJ,UAAWC,IAAMI,MACjBN,MAAOP,EACPc,SAAUV,EACVW,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,uBAAOV,UAAWC,IAAMG,MAAxB,oBACA,uBACEJ,UAAWC,IAAMI,MACjBN,MAAOL,EACPY,SAAUV,EACVW,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,wBAAQH,KAAK,SAASP,UAAWC,IAAMU,OAAvC,6B,gBCnCSC,EApBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACxB,OACE,gCACE,oBAAId,UAAWC,IAAMQ,MAArB,mCACA,uBACEF,KAAK,OACLf,KAAK,SACLO,MAAOc,EACPP,SAAUQ,EACVd,UAAWC,IAAMI,Y,gBCsBVU,EA/BK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,oBAAIjB,UAAWC,IAAMiB,KAArB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaM,UAAWC,IAAMoB,SAA9B,UACE,uBAAMrB,UAAWC,IAAMqB,aAAvB,UAAsC9B,EAAtC,OACA,sBAAMQ,UAAWC,IAAMsB,eAAvB,SAAwC7B,IACxC,wBACEa,KAAK,SACLP,UAAWC,IAAMU,OACjBa,QAAS,kBAAMP,EAAcG,IAH/B,sBAHOA,SC2DFK,MA3Df,WACE,MAAgClC,oBAAS,WAAO,IAAD,EAC7C,iBAAOmC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8D,MADhE,mBAAOd,EAAP,KAAiBe,EAAjB,KAIA,EAA4BxC,mBAAS,IAArC,mBAAOsB,EAAP,KAAemB,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAiBR,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aAC1DI,GACFH,EAAYG,KAEb,IAEH,IA4BMC,EAAmBtB,EAAOuB,cAC1BC,EAAkBrB,EAASH,QAAO,SAACyB,GAAD,OACtCA,EAAQ9C,KAAK4C,cAAcG,SAASJ,MAGtC,OACE,gCACE,oBAAInC,UAAWC,IAAMQ,MAArB,uBACA,cAAC,EAAD,CAAanB,WApCE,SAACkD,GAClB,IAAQhD,EAAiBgD,EAAjBhD,KAAME,EAAW8C,EAAX9C,OACR+C,EAAa,CACjBrB,GAAIsB,cACJlD,KAAMA,EACNE,OAAQA,QAOSiD,IAJA3B,EAAS4B,MAC1B,qBAAGpD,OAAoBgD,EAAiBhD,QAQ1CuC,GAAY,SAACc,GAAD,4BAAmBA,GAAnB,CAA8BJ,OAJxCK,MAAM,GAAD,OAAIL,EAAWjD,KAAf,8BAyBL,oBAAIQ,UAAWC,IAAMQ,MAArB,sBACA,cAAC,EAAD,CAAQI,OAAQA,EAAQC,eAnBL,SAACiC,GACtBf,EAAUe,EAAEjD,cAAcC,UAmBxB,cAAC,EAAD,CAAaiB,SAAUqB,EAAiBpB,cAhBtB,SAACG,GACrBW,EAAYf,EAASH,QAAO,SAACyB,GAAD,OAAaA,EAAQlB,KAAOA,aCnC7C4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.997e3db4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"listItem\":\"ContactList_listItem__29Cbr\",\"listItemName\":\"ContactList_listItemName__39F1_\",\"listItemNumber\":\"ContactList_listItemNumber__3d8DW\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};","import React from \"react\";\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\";\n\nfunction ContactForm({ addContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInput = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addContact({ name, number });\n    reset();\n  };\n\n  return (\n    <form className={style.ContactForm} onSubmit={handleSubmit}>\n      <label className={style.label}>Name</label>\n      <input\n        className={style.input}\n        value={name}\n        onChange={handleInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <label className={style.label}>Number</label>\n      <input\n        className={style.input}\n        value={number}\n        onChange={handleInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button type=\"submit\" className={style.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, filterContacts }) => {\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={filterContacts}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  filterContacts: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport style from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={style.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.listItem}>\n          <span className={style.listItemName}>{name}:</span>\n          <span className={style.listItemNumber}>{number}</span>\n          <button\n            type=\"button\"\n            className={style.button}\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(window.localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  const addContact = (contactFormState) => {\n    const { name, number } = contactFormState;\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const repeatName = contacts.find(\n      ({ name }) => name === contactFormState.name\n    );\n\n    if (repeatName !== undefined) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n\n    setContacts((prevState) => [...prevState, newContact]);\n  };\n\n  const filterContacts = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div>\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n\n      <h2 className={style.title}>Contacts</h2>\n      <Filter filter={filter} filterContacts={filterContacts} />\n      <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}